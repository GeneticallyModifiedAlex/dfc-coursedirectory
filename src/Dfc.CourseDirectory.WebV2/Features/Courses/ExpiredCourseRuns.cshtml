@model Dfc.CourseDirectory.WebV2.Features.Courses.ExpiredCourseRuns.ViewModel
@{
    Layout = "_V2LayoutAdmin";
    ViewContext.SetLayoutData(title: "Courses");

    var validationErrors = ViewData.ModelState["CheckedRows"]?.Errors
                           ?? new Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection();
}

@section BackLink {
    <govuk-back-link asp-controller="ProviderDashboard" asp-action="Index" asp-all-route-data="@ProviderContext.RouteValues">Back</govuk-back-link>
}


<govuk-error-summary>
    <govuk-error-summary-item asp-for="CheckedRows" />
</govuk-error-summary>


<form asp-action="Update" asp-all-route-data="@ProviderContext.RouteValues">

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

            <h1 class="govuk-heading-xl">Courses</h1>
           
            <p class="govuk-body-l">
                Courses with a start date 2 months in the past will not be visible to learners searching for opportunities on
                National Careers Service. Find a Course.
            </p>

            <p class="govuk-body">
                Select a course to update. Searching multiple courses will update the start date for those courses.
            </p>


            <p class="govuk-body">
                If you have courses with multiple mew start date you can <a asp-controller="DataManagement" asp-action="Dashboard" asp-all-route-data="@ProviderContext.RouteValues" class="govuk-link">update all courses by data upload</a>
            </p>

            <div class="govuk-form-group@(validationErrors.Any() ? " govuk-form-group--error" : string.Empty)">

                @foreach (var error in validationErrors)
                {
                    <govuk-error-message>
                        @error.ErrorMessage
                    </govuk-error-message>
                }
                @if (Model.Rows.Count > 0)
                {
                    <table class="govuk-table">

                        <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th scope="col" class="govuk-table__header">Select</th>
                            <th scope="col" class="govuk-table__header">Course name</th>
                            <th scope="col" class="govuk-table__header" style="width: 150px">Your reference</th>
                            <th scope="col" class="govuk-table__header" style="width: 150px">Delivery type</th>
                            <th scope="col" class="govuk-table__header" style="width: 150px">Start date</th>
                        </tr>

                        @*Hidden by default and only displays when javascript is executed on page load*@
                        <tr id="selectAllRow" class="govuk-table__row" style="display: none">
                            <th class="govuk-table__header" colspan="1">
                                <div class="govuk-checkboxes__item govuk-checkboxes--small">
                                    <input class="govuk-checkboxes__input" type="checkbox" id="selectAllCheckbox" name="selectAllCheckbox" onClick="toggle(this)">
                                    <label class="govuk-checkboxes__label govuk-label" for="selectAllCheckbox" > </label>
                                </div>

                            </th>
                            <th class="govuk-table__header" id="selectAllLabel" style="text-align: left" colspan="4">
                                <label class="govuk-checkboxes__label govuk-label" for="selectAllCheckbox"> Select all courses</label>
                                </th>
                        </tr>
                   
                        <tbody class="govuk-table__body">


                        @for (var i = 0; i < Model.Rows.Count - 1; i++)
                        {
                            var expiredCourse = Model.Rows.ElementAt(i);
                            var selectedCourses = "selectedCourses" + 1;

                            <tr class="govuk-table__row" data-testid="CourseRunRow">
                                <td class="govuk-table__cell" style="border: none">
                                        
                                    <div class="govuk-checkboxes__item govuk-checkboxes--small" data-testid="SelectCourse">
                                        <input class="govuk-checkboxes__input" type="checkbox" id="selectedCourses" name="selectedCourses" value="@expiredCourse.CourseId" onClick="toggled(this)">
                                        <label class="govuk-checkboxes__label govuk-label" for="selectedCourses" > </label>

                                    </div> 

                                </td>
                                <td colspan="2" class="govuk-table__cell" style="border: none" data-testid="CourseName">
                                    <label class="govuk-checkboxes__label govuk-label" for="selectedCourses">@expiredCourse.CourseName </label>
                                    </td>
                                <td class="govuk-table__cell" style="border: none" data-testid="ProviderCourseRef">@expiredCourse.ProviderCourseRef</td>
                                <td class="govuk-table__cell" style="border: none" data-testid="DeliveryMode">@expiredCourse.DeliveryMode.ToDescription()</td>
                                <td class="govuk-table__cell" style="border: none" data-testid="StartDate">@expiredCourse.StartDate.ToString("dd/MM/yyyy")</td>
                            </tr>
                        }
                            


                    </table>
                }
                else
                {
                    <h2 class="govuk-heading-l">You have no expired courses</h2>
                }
            </div>

        </div>
    
    </div>

@if (Model.Rows.Count > 0)
{
    <govuk-button type="Submit" id="SubmitButton">Continue</govuk-button>
}
</form>



<script language="javascript">
    // load select all checkbox when javascript loads
    document.getElementById("selectAllRow").style.display = "table-row";

    // select all checkboxes logic
    function toggle(source) {
        var checkBoxes = document.getElementsByName("selectedCourses");

        for (var i = 0, n = checkBoxes.length; i < n; i++) {

            checkBoxes[i].checked = source.checked;
        }

        selectAllLabel();

    }

    function toggled(source) {
        var checkBoxes = document.getElementsByName("selectedCourses");
        var checkBoxesAll = document.getElementById("selectAllCheckbox");
        var counter = 0;


        for (var i = 0, n = checkBoxes.length; i < n; i++) {
            if (checkBoxes[i].checked)
                counter++;

            if (checkBoxesAll.checked && !checkBoxes[i].checked) {
                checkBoxesAll.checked = checkBoxes[i].checked;
            }

            if (counter === checkBoxes.length) {
                checkBoxesAll.checked = source.checked;
            }

        }

        selectAllLabel();

    }

    function selectAllLabel() {

        // update select all label with select or deselect
        var labelText = document.getElementById("selectAllLabel");
        var checkboxToggle = document.getElementById("selectAllCheckbox");

        if (!checkboxToggle.checked) {
            labelText.innerHTML = "Select all courses";
        } else {
            labelText.innerHTML = "Deselect all courses";
            checkboxToggle.checked = true;
        }

    }

</script>
