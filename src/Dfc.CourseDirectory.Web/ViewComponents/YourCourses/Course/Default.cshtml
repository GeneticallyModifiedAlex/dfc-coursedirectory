@model Dfc.CourseDirectory.Web.ViewModels.YourCoursesViewModel
@using System.Linq
@using Dfc.CourseDirectory.Models.Models.Courses
@using Dfc.CourseDirectory.Web.ViewComponents.ModalPopup
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="govuk-form-group">
    <ul>
        <li><hr class="govuk-section-break govuk-section-break--visible"></li>
        @foreach (var course in Model.Courses)
        {
            <li>
                <h3 class="govuk-heading-m">
                    @course.QualificationCourseTitle
                </h3><span class="govuk-body">(@course.CourseRuns.Count())</span>
                <div class="govuk-form-group">
                    <div class="govuk-form-group cd-course-text">
                        <p class="govuk-body">
                            Level @course.NotionalNVQLevelv2, @course.AwardOrgCode, Lars: @course.LearnAimRef,
                            <a class="edit-btn open-descript" href="#">View course description</a>
                            <span class="cd-advanced-text">Advanced learner Loan Available</span>
                        </p>
                    </div>
                    <fieldset class="govuk-fieldset cd-course-checkbox" aria-describedby="nationality-hint nationality-error">
                        <div class="govuk-checkboxes">
                            <div class="govuk-checkboxes__item">

                                <input class="govuk-checkboxes__input" id="nationality-1" name="nationality" type="checkbox" value="" checked="@course.AdvancedLearnerLoan" disabled="disabled" aria-describedby="iftionality-1-item-hint">
                                <label class="govuk-label govuk-checkboxes__label" for="nationality-1"></label>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </li>
            <li><hr class="govuk-section-break govuk-section-break--visible"></li>
            foreach (var courseRun in course.CourseRuns)
            {
                @await Component.InvokeAsync(nameof(CourseRun), courseRun)
            }
        }
    </ul>
</div>
@{
    var model = new ModalPopupModel();
}
@await Component.InvokeAsync(nameof(ModalPopup), model)
<script src="https://cdn.rawgit.com/vast-engineering/jquery-popup-overlay/1.7.13/jquery.popupoverlay.js"></script>
<script>
    //$(".view-course-btn").on("click", function () {
    //    alert("Text");
    //});

    $('#popup-venue,#popup-preview', '#popup-descript').popup({
        color: '#fff',
        transition: 'all 0.3s'
    });

    $("#preview").click(function (e) {
        e.preventDefault();
        $("html, body").css("overflow", "hidden");
        $('#popup-preview').popup('show');
    });

    $("#close-preview").click(function (e) {
        e.preventDefault();
        $("html, body").css("overflow", "auto");
        $('#popup-preview').popup('hide');
    });

    $(".open-descript").each(function (e) {
        $(this).click(function (e) {
            e.preventDefault();
            $("html, body").css("overflow", "hidden");
            $('#popup-descript').popup('show');
        });
    });

    $("#close-decript").click(function (e) {
        e.preventDefault();
        $("html, body").css("overflow", "auto");
        $('#popup-descript').popup('hide');
    });


</script>
<style>
    #popup-flat.popup_content, #popup-descript {
        border: solid 1px #000 !important;
    }

    #popup-flat_background {
        background-color: rgba(255,255,255,.6) !important;
    }

    #popup-flat, #popup-descript {
        background-color: #fff;
        height: 60%;
        overflow-y: scroll;
    }
    #popup-preview {
        background-color: #fff;
        border: solid 1px #000;
        height: 70%;
        width: 70%;
        overflow-x: hidden;
        overflow-y: scroll;
    }
</style>