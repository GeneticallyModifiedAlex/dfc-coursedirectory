@using Dfc.CourseDirectory.Models.Models.Courses;
@using Dfc.CourseDirectory.Web.Helpers;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfc.CourseDirectory.Web.ViewComponents.Courses.Duration.DurationModel

<div class="govuk-form-group">
    <fieldset class="govuk-fieldset" aria-describedby="dob-hint" role="group">
        <label class="govuk-label" for="sub">
            @Model.LabelText
        </label>
        <span id="more-detail-hint" class="govuk-hint">@Model.HintText</span>
        <div class="govuk-date-input" id="dob">

            <span asp-validation-for="@Model.DurationLength" class="govuk-error-message"></span>
            <div class="govuk-date-input__item" style="margin-right:10px;">
                <div class="govuk-form-group">

                    <input pattern="[0-9]*" min="1" step="1" class="govuk-input govuk-input--width-2" style="display:inline;" asp-for="@Model.DurationLength" type="text" aria-describedby="@Model.AriaDescribedBy">
                </div>
            </div>


            <div class="govuk-date-input__item" style="width:120px;">
                <div class="govuk-form-group">

                    <select class="govuk-select" asp-for="Id" style="width:120px;"
                            asp-items="@(new SelectList(Model.DurationUnits,"Id","DurationUnit"))"></select>
                </div>
            </div>



        </div>
    </fieldset>
</div>

<script>
    (function ($) {
        $(function () {
            var formGroupErrorClass = "govuk-form-group--error";
            var elementErrorClass = "govuk-input--error";
            var $elementDurationLength = $("#@nameof(Model.DurationLength)");
            var $validationDurationLength = $elementDurationLength.prev("[data-valmsg-for='@nameof(Model.DurationLength)']");
            $validationDurationLength.css("margin-bottom", "0");
            var $formDuration = $elementDurationLength.closest('.govuk-form-group');

            var $form = $elementDurationLength.closest("form");
            $form.addTriggersToJqueryValidate().triggerElementValidationsOnFormValidation();
            var validator = $form.validate();

            $elementDurationLength.on("blur", function () {
                var trimmed = $elementDurationLength.val().trim();
                $elementDurationLength.val(trimmed);

                var result = validator.element($elementDurationLength);

                if (result) {
                    $elementDurationLength.removeClass(elementErrorClass);
                    $formDuration.removeClass(formGroupErrorClass);
                    $validationDurationLength.hide();
                    $validationDurationLength.css("margin-bottom", "0");
                } else {
                    $elementDurationLength.addClass(elementErrorClass);
                    $formDuration.addClass(formGroupErrorClass);
                    $validationDurationLength.show();
                    $validationDurationLength.css("margin-bottom", "15px");
                }
            });

            $elementDurationLength.elementValidation(function (element, result) {
                if (!$formDuration.hasClass(formGroupErrorClass)) {
                    $validationDurationLength.hide();
                }

                if (result) {
                    $elementDurationLength.removeClass(elementErrorClass);
                    $formDuration.removeClass(formGroupErrorClass);
                    $validationDurationLength.css("margin-bottom", "0");
                }
            });

            $elementDurationLength.on("keypress", function (event) {
                var charCode = event.which ? event.which : event.keyCode;

                if ((charCode >= 48 && charCode <= 57) || charCode === 46) {
                    return true;
                }

                return false;
            });
        });
    })(jQuery);
</script>