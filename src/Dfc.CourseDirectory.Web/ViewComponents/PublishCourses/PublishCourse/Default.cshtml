@using System.Text.RegularExpressions
@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Models.Models.Courses
@model Dfc.CourseDirectory.Web.ViewModels.PublishCourses.PublishViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@Html.HiddenFor(x => x.PublishMode)

@foreach (var course in Model.Courses)
{
    <div class="error-line">
        <div class="govuk-grid-column-one-third m100 col"><strong>@course.QualificationCourseTitle</strong><br />@course.NotionalNVQLevelv2, @course.AwardOrgCode, Lars: @course.LearnAimRef</div>

        <div id="courseid" style="display:none">@course.id</div>
        <div class="govuk-grid-column-two-thirds">
            @if (course.IsValid)
            {
                @*<div class="govuk-grid-column-one-quarter"><div class="error-box no-error">No errors</div></div>
                    <div class="govuk-grid-column-one-quarter">&nbsp;</div>*@


                <div class="govuk-grid-column-one-third col"><div class="error-box no-error">No errors</div></div>
                <div class="govuk-grid-column-two-thirds align-right col right center">&nbsp;</div>

            }
            else
            {
                <div class="govuk-grid-column-one-third col"><div class="error-box no-error">Errors</div></div>
                <div class="govuk-grid-column-two-thirds align-right col right center">

                    <a id="course-fix-@course.id" class="error-fix govuk-table__cell--numeric fix" asp-controller="EditCourse" asp-action="Index" style="display:block"
                       asp-route-courseId="@course.id" asp-route-mode=@Model.PublishMode>Fix</a>
                </div>
            }
        </div>

    </div>

    foreach (var courseRun in course.CourseRuns)
    {
        <div id="courserunid" style="display:none">@courseRun.id</div>
        <div class="error-line-in">
            <div class="govuk-grid-column-one-third col">@courseRun.CourseName</div>

            <div class="govuk-grid-column-two-thirds">
                @if (courseRun.RecordStatus == RecordStatus.BulkUloadPending || courseRun.RecordStatus == RecordStatus.MigrationPending)
                {
                    
                    <div class="govuk-grid-column-one-third col"><div class="error-box no-error">Errors</div></div>
                    <div class="govuk-grid-column-two-thirds align-right col right center">

                        <a id="course-fix-@course.id" class="error-fix govuk-table__cell--numeric fix" asp-controller="EditCourseRun" asp-action="Index" style="display:block"
                           asp-route-courseId="@course.id" asp-route-mode=@Model.PublishMode>Fix</a>
                        
                        @if (courseRun.RecordStatus == RecordStatus.MigrationPending)
                        {
                            <button type="submit" class="govuk-button">Confirm delete</button>
                            <a href="#" class="error-link">Cancel</a>
                        }

                    </div>

                }
                else
                {
                    if (courseRun.RecordStatus == RecordStatus.BulkUploadReadyToGoLive || courseRun.RecordStatus == RecordStatus.MigrationReadyToGoLive)
                    {
                        @*<div class="govuk-grid-column-one-quarter"><div class="error-box no-error">No errors</div></div>
                            <div class="govuk-grid-column-one-quarter">&nbsp;</div>*@


                        <div class="govuk-grid-column-one-third col"><div class="error-box no-error">No errors</div></div>
                        <div class="govuk-grid-column-two-thirds align-right col right center">&nbsp;</div>


                    }

                }
            </div>
        </div>
    }

}

<script>
    (function ($) {
        $(function () {
            var $deleteButton = $(".delete");

            var $canceldeleteButton = $(".cancel-delete");

            var $fixButton = $(".fix");

            $canceldeleteButton.on("click",
                function (event) {
                    event.preventDefault();
                    {
                        var courseRunId = $(this).attr("data-course-run-id");

                        var migrationConfirmDelete = $("#migration-confirm-delete-" + courseRunId);
                        migrationConfirmDelete.css({ "display": "none" });

                        var migrationCancelDelete = $("#migration-cancel-delete-" + courseRunId);
                        migrationCancelDelete.css({ "display": "none" });

                        var fix = $("#course-run-fix-" + courseRunId);
                        fix.css({ "display": "block" });

                        var deleteOptions = $("#migration-delete-" + courseRunId);
                        deleteOptions.css({ "display": "block" });
                    }
                });


            $deleteButton.on("click",
                function (event) {
                    event.preventDefault();

                    var courseRunId = $(this).attr("data-course-run-id");

                    var deleteOptions = $("#migration-delete-" + courseRunId);
                    deleteOptions.css({ "display": "none" });

                    var migrationConfirmDelete = $("#migration-confirm-delete-" + courseRunId);
                    migrationConfirmDelete.css({ "display": "block" });

                    var migrationCancelDelete = $("#migration-cancel-delete-" + courseRunId);
                    migrationCancelDelete.css({ "display": "block" });

                    var fix = $("#course-run-fix-" + courseRunId);
                    fix.css({ "display": "none" });

                });
        });
    })(jQuery);
</script>

