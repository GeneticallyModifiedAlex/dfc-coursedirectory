
@using Dfc.CourseDirectory.Web.ViewComponents.CourseName
@using Dfc.CourseDirectory.Web.ViewComponents.CourseProviderReference
@using Dfc.CourseDirectory.Web.ViewComponents.UrlInput
@using Dfc.CourseDirectory.Web.ViewComponents.CostInput
@using Dfc.CourseDirectory.Web.ViewComponents.CostDescription
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.CourseDelivery
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.CourseDeliveryType


<h1 class="govuk-heading-xl">Add course section 2</h1>

<form asp-controller="Courses" asp-action="AddCourse">
    @await Component.InvokeAsync(nameof(CourseName), new CourseNameModel
    {
        LabelText = "Course name",
        HintText = "This is the name people will see when they search for your course.",
        AriaDescribedBy = "Please enter the course name."
    })

    @await Component.InvokeAsync(nameof(CourseProviderReference), new CourseProviderReferenceModel
    {
        LabelText = "ID",
        HintText = "This is how you identify a course in your internal system.",
        AriaDescribedBy = "Please enter the ID for this course"
    })
    
    @await Component.InvokeAsync(nameof(CourseDeliveryType), new CourseDeliveryTypeModel
    {
        DeliveryTypes = new List<DeliveryTypeModel>()
        {
        
            new DeliveryTypeModel()
            {
                Id=0,
                DeliveryType = "Classroom based"
            },
            new DeliveryTypeModel()
            {
                Id=1,
                DeliveryType = "Online"
            },
            new DeliveryTypeModel()
            {
                Id=2,
                DeliveryType = "Work based"
            }
        },
        LabelText = "Delivery Mode",
        HintText = "Select how this course will be delivered",
        AriaDescribedBy = "How the course will be delivered"
    })

    @await Component.InvokeAsync(nameof(UrlInput), new UrlInputModel
    {
        LabelText = "Url",
        HintText = "Enter the url for this course",
        AriaDescribedBy = "Enter the url for this course"
    })

    @await Component.InvokeAsync(nameof(CostInput), new CostInputModel
    {
        LabelText = "Cost",
        HintText = "Enter the cost for this course",
        AriaDescribedBy = "Enter the cost for this course"
    })

    @await Component.InvokeAsync(nameof(CostDescription), new CostDescriptionModel
    {
        LabelText = "Cost description",
        HintText = "Enter details of related to the cost of this course",
        AriaDescribedBy = "Enter details of related to the cost of this course"
    })
</form>