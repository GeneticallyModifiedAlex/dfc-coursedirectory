@using Dfc.CourseDirectory.Models.Enums
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.ViewComponents.BackgroundBulkUploadNotification
@using Dfc.CourseDirectory.Web.ViewComponents.Notification
@model Dfc.CourseDirectory.Web.ViewModels.BulkUpload.BulkUploadViewModel
@inject IAuthorizationService Authorization
@{
    ViewData["Title"] = "Bulk upload apprenticeship training information";
    Layout = "_Layout_Your_Courses";
    var authorised = await Authorization.AuthorizeAsync(User, "Admin");
}

@if (Model.BulkUploadBackgroundInProgress)
{
    @await Component.InvokeAsync(nameof(BackgroundBulkUploadNotification),
        new BackgroundBulkUploadNotificationModel()
        {
            BulkUploadBackgroundInProgress = true,
            BulkUploadBackgroundRowCount = Model.BulkUploadBackgroundRowCount,
            BulkUploadBackgroundStartTimestamp = Model.BulkUploadBackgroundStartTimestamp
        });
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Bulk upload apprenticeship training course information</h1>

        @{
            var styleAttribute = (string.IsNullOrEmpty(Model.NotificationTitle) && Model.errors == null)
                ? "style=\"display: none;\""
                : string.Empty;
        }

        <div id="errorSummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" @Html.Raw(styleAttribute)>
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                @if (string.IsNullOrEmpty(Model.NotificationTitle))
                {
                    <span>There is a problem</span>
                }
                else
                {
                    @Model.NotificationTitle
                }
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list">
                    @if (!string.IsNullOrEmpty(Model.NotificationMessage))
                    {
                        <li>@Model.NotificationMessage</li>
                    }
                    @if (Model.errors != null && Model.errors.Any())
                    {
                        foreach (var error in Model.errors)
                        {
                            <li>
                                <span id="name-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">
                                        Error:
                                    </span>
                                    @error
                                </span>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>

        <form method="post" id="bulkUploadForm" enctype="multipart/form-data" asp-controller="BulkUploadApprenticeships" asp-action="Index">

            <p class="govuk-body">You can upload a CSV file to update your apprenticeship training courses, or you can @Html.ActionLink("add", "Index", "Apprenticeships"), @Html.ActionLink("edit or delete", "Index", "ProviderApprenticeships") each course individually.</p>

            <h3 class="govuk-heading-m">Creating your bulk upload file</h3>

            <p class="govuk-body">Uploading and publishing a bulk upload file will replace all of your published apprenticeship training courses. To create the file you can:</p>

            <ul class="govuk-list govuk-list--bullet">
                <li>download a @Html.ActionLink("blank template", "GetApprenticeshipBulkUploadTemplateFile", "BlobStorage") and add your apprenticeship training course information</li>
                <li>download and edit a file containing your @Html.ActionLink("published apprenticeship training course information", "GetCurrentApprenticeshipsTemplateFile", "BlobStorage")</li>
            </ul>

            <h3 class="govuk-heading-m">If you have 375 rows or fewer in your bulk upload file</h3>

            <div id="groupServerSideError" class="govuk-form-group">
                <label class="govuk-label" for="bulkUploadFile">Upload a file</label>
                <span id="serverSideError" class="govuk-error-message" style="display: none">There is an error with the file. See above summary</span>
                <input class="govuk-file-upload" id="bulkUploadFile" name="bulkUploadFile" type="file"
                       val-required-message="Select a bulk upload file"
                       val-file-extensions="csv"
                       val-file-extensions-message="The selected file must be a CSV"
                       val-file-size-max="209715200"
                       val-file-size-max-message="The selected file must be smaller than 200MB" />
            </div>

            <button type="submit" id="uploadButton" class="govuk-button" data-module="govuk-button">Upload</button>
            <a class="govuk-link cd-cancel-link" asp-controller="Home" asp-action="Index">Cancel</a>

        </form>

        <h3 class="govuk-heading-m">If you have 376 rows or more in your bulk upload file</h3>

        <p class="govuk-body">To update your apprenticeship training course information email  <a href="mailto:support@coursedirectory.org.uk?subject=Bulk%20upload">support@coursedirectory.org.uk</a> attaching your bulk upload file. The support desk will upload your file to Publish to the course directory.</p>

    </div>
</div>

<script>
        (function ($) {
            $(function () {
                var $errorSummary = $("#errorSummary").govUkErrorSummary();
                var $bulkUploadFile = $("#bulkUploadFile").govUkFileUpload();
                var $button = $("#uploadButton");

                var hasServerSideError = '@(Model.errors != null && Model.errors.Any() ? true : false)'
                if (hasServerSideError === 'True') {
                    $("#serverSideError").show();
                    $("#groupServerSideError").addClass("govuk-form-group--error");
                }
                else {
                    $("#serverSideError").hide();
                    $("#groupServerSideError").removeClass("govuk-form-group--error");
                }

                function goBack() {
  window.history.back();
}

                $bulkUploadFile.on("change", function () {
                    $bulkUploadFile.govUkFileUpload("validState");
                    $errorSummary.govUkErrorSummary("removeAll");
                    $errorSummary.govUkErrorSummary("hide");
                });

                $button.on("click", function (event) {
                    event.preventDefault();
                    if (!$.requiredValidate($bulkUploadFile.val())) {
                        $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-required-message"));
                        var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                        $errorSummary.govUkErrorSummary("add", errorHashLinks);
                        $errorSummary.govUkErrorSummary("show");
                    } else if ($bulkUploadFile[0].files) {
                        if (!$.fileExtensionsValidate({ extensions: $bulkUploadFile.attr("val-file-extensions") }, $bulkUploadFile[0].files[0])) {
                            $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-file-extensions-message"));
                            var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                            $errorSummary.govUkErrorSummary("add", errorHashLinks);
                            $errorSummary.govUkErrorSummary("show");
                        } else if (!$.fileSizeMaxValidate({ max: $bulkUploadFile.attr("val-file-size-max") }, $bulkUploadFile[0].files[0])) {
                            $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-file-size-max-message"));
                            var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                            $errorSummary.govUkErrorSummary("add", errorHashLinks);
                            $errorSummary.govUkErrorSummary("show");
                        } else {
                            $bulkUploadFile.govUkFileUpload("validState");
                            $errorSummary.govUkErrorSummary("removeAll");
                            $errorSummary.govUkErrorSummary("hide");
                            $("#bulkUploadForm").submit();
                        }
                    } else {
                        $bulkUploadFile.govUkFileUpload("validState");
                        $errorSummary.govUkErrorSummary("removeAll");
                        $errorSummary.govUkErrorSummary("hide");
                        $("#bulkUploadForm").submit();
                    }
                });
            });
        })(jQuery);
</script>

