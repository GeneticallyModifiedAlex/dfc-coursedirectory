@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.Areas.Identity.Data;

@model Dfc.CourseDirectory.Web.ViewModels.BulkUpload.BulkUploadViewModel


@inject IAuthorizationService Authorization
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Bulk Upload";
    var authorised = await Authorization.AuthorizeAsync(User, "Admin");
}

<div>
    <h1 class="govuk-heading-xl">@Html.Raw(Model.AbraKadabra)</h1>
    <form method="post" id="bulkUploadForm" enctype="multipart/form-data" asp-controller="BulkUpload" asp-action="Index">
        <div class="govuk-form-group">
            <label class="govuk-label" for="bulkUploadFile">
                Upload a file
            </label>
            <input class="govuk-file-upload" id="bulkUploadFile" name="bulkUploadFile" type="file"
                   val-required-message="Select a file to upload"
                   val-file-extensions="csv"
                   val-file-extensions-message="The selected file must be a CSV"
                   val-file-size-max="2097152"
                   val-file-size-max-message="The selected file must be smaller than 2MB" />
        </div>
        <button type="submit" id="uploadButton" class="govuk-button">
            Upload
        </button>
    </form>
</div>

<div class="govuk-form-group">


    @Html.ActionLink("Goto Publish", "Index", "Publish", new {  }, new { @class = "govuk-button" })
</div>


<script>
    (function ($) {
        $(function () {
            var $fileupload1 = $("#bulkUploadFile").govUkFileUpload();
            var $button = $("#uploadButton");

            $fileupload1.on("change", function () {
                $fileupload1.govUkFileUpload("validState");
            });

            $button.on("click", function (event) {
                event.preventDefault();
                if (!$.requiredValidate($fileupload1.val())) {
                    $fileupload1.govUkFileUpload("invalidState", $fileupload1.attr(
                        "val-required-message"));
                } else if ($fileupload1[0].files) {
                    if (!$.fileExtensionsValidate({
                        extensions: $fileupload1.attr("val-file-extensions")
                    }, $fileupload1[0].files[0])) {
                        $fileupload1.govUkFileUpload("invalidState", $fileupload1.attr(
                            "val-file-extensions-message"));
                    } else if (!$.fileSizeMaxValidate({
                        max: $fileupload1.attr("val-file-size-max")
                    }, $fileupload1[0].files[0])) {
                        $fileupload1.govUkFileUpload("invalidState", $fileupload1.attr(
                            "val-file-size-max-message"));
                    } else {
                        $fileupload1.govUkFileUpload("validState");
                        $("#bulkUploadForm").submit();
                    }
                } else {
                    $fileupload1.govUkFileUpload("validState");
                    $("#bulkUploadForm").submit();
                }
            });
        });
    })(jQuery);
</script>


